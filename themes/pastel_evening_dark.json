{
	"$schema": "vscode://schemas/color-theme",
	"type": "dark",
	"colors": {
		// common
		"foreground": "#acafbf",
		"selection.background": "#324454",
		"descriptionForeground": "#acafbf",
		"icon.foreground": "#acafbf",
		"disabledForeground": "#737580",
		"contrastActiveBorder": "#00000000",
		"contrastBorder": "#00000000",
		"focusBorder": "#00000000",
		"widget.shadow": "#00000060",
		// window
		// "window.activeBorder": "#f0f", // "#f0f"
		// "window.inactiveBorder": "#f0f",
		// welcome page
		// "walkthrough.stepTitle.foreground": "#f0f", // "#d1d5eb"
		"welcomePage.progress.background": "#1c1f24",
		"welcomePage.progress.foreground": "#0a6bb1",
		"welcomePage.tileBackground": "#23252b",
		// "welcomePage.tileBorder": "#f0f", // "#d1d5eb1a"
		"welcomePage.tileHoverBackground": "#2d323b", // "#2c2c2d"
		"welcomePage.background": "#292b33", // "#f0f"
		// side by side editor
		//"sideBySideEditor.horizontalBorder": "#f0f", // "#444444"
		//"sideBySideEditor.verticalBorder": "#f0f", // "#444444"
		// scrollbar
		"scrollbarSlider.background": "#d1d5eb10",
		"scrollbarSlider.hoverBackground": "#d1d5eb15",
		"scrollbarSlider.activeBackground": "#d1d5eb20",
		"scrollbar.shadow": "#00000030",
		// search editor
		// uses "editor.findMatch.." by default
		//"searchEditor.findMatchBackground": "#f2858540",
		//"searchEditor.findMatchBorder": "#3d6b99",
		//"searchEditor.textInputBorder": "#f0f",
		// banner
		// "banner.background": "#f0f", // "#04395e"
		// "banner.foreground": "#f0f", // "#d1d5eb"
		// "banner.iconForeground": "#f0f", // "#0a77c5"
		// button
		"button.background": "#0a6bb1",
		"button.hoverBackground": "#0a77c5",
		"button.foreground": "#d1d5eb",
		"button.secondaryBackground": "#353742",
		"button.secondaryForeground": "#acafbf",
		"button.secondaryHoverBackground": "#424452",
		"button.separator": "#e3e7ff80",
		//"button.border": "#f0f",
		// text code block
		"textCodeBlock.background": "#00000030",
		"textBlockQuote.background": "#00000030",
		"textBlockQuote.border": "#0a6bb1",
		"textLink.activeForeground": "#44a9f1",
		"textLink.foreground": "#6dbaf2",
		"textPreformat.foreground": "#e6b583",
		// "textSeparator.foreground": "#d1d5eb20",
		// toolbars
		"toolbar.hoverBackground": "#d1d5eb20",
		"toolbar.hoverOutline": "#00000000",
		"toolbar.activeBackground": "#d1d5eb40",
		// dropdown
		"dropdown.background": "#23252b",
		"dropdown.border": "#00000060",
		"dropdown.listBackground": "#23252b",
		"dropdown.foreground": "#acafbf",
		// checkbox
		"checkbox.background": "#23252b",
		"checkbox.border": "#00000060",
		// "checkbox.foreground": "#f0f", // "#f0f0f0"
		// "checkbox.selectBackground": "#f0f", // "#292b33"
		// "checkbox.selectBorder": "#f0f", // "#292b33"
		// input
		"input.background": "#1c1f24",
		"input.border": "#00000040",
		"input.placeholderForeground": "#737580",
		"inputOption.activeBackground": "#0a6bb1bb",
		"inputOption.activeForeground": "#d1d5eb",
		//"input.foreground": "#acafbf",
		//"inputOption.activeBorder": "#0a6bb1",
		"inputOption.hoverBackground": "#d1d5eb20",
		//"inputValidation.errorBackground": "#5c1c1c",
		//"inputValidation.errorBorder": "#f14c4c",
		"inputValidation.errorForeground": "#bfc3d4",
		// "inputValidation.infoBackground": "#063b49",
		// "inputValidation.infoBorder": "#007acc",
		"inputValidation.infoForeground": "#bfc3d4",
		// "inputValidation.warningBackground": "#352a05",
		// "inputValidation.warningBorder": "#b89500",
		"inputValidation.warningForeground": "#bfc3d4",
		// title bar
		"titleBar.activeBackground": "#1c1f24",
		"titleBar.activeForeground": "#acafbf",
		"titleBar.inactiveBackground": "#1c1f24",
		"titleBar.inactiveForeground": "#9193a1",
		"titleBar.border": "#00000040",
		// menu bar
		"menubar.selectionBackground": "#292b33",
		"menubar.selectionForeground": "#d1d5eb",
		"menubar.selectionBorder": "#00000000",
		// menu
		"menu.background": "#1c1f24",
		"menu.border": "#00000020",
		"menu.foreground": "#acafbf",
		"menu.selectionBackground": "#292b33",
		"menu.selectionForeground": "#d1d5eb",
		"menu.selectionBorder": "#00000000",
		"menu.separatorBackground": "#2d323b",
		// activity bar
		"activityBar.background": "#23252b",
		"activityBar.border": "#00000040",
		"activityBar.activeBorder": "#0a6bb1",
		"activityBar.activeBackground": "#2d323b",
		"activityBar.dropBorder": "#d1d5eb20",
		"activityBar.foreground": "#d1d5eb",
		"activityBar.activeFocusBorder": "#0a6bb1",
		"activityBar.inactiveForeground": "#d1d5eb45",
		"activityBarItem.profilesBackground": "#4d4d4d",
		"activityBarItem.profilesForeground": "#d1d5eb66",
		"activityBarItem.profilesHoverForeground": "#d1d5eb",
		// badge
		"activityBarBadge.background": "#0a6bb1",
		"activityBarBadge.foreground": "#e3e7ff",
		"badge.background": "#0a6bb1",
		"badge.foreground": "#e3e7ff",
		// side bar
		"sideBar.background": "#23252b",
		//"sideBar.foreground": "#acafbf",
		"sideBarSectionHeader.background": "#1c1f24",
		//"sideBarSectionHeader.foreground": "#acafbf",
		"sideBarSectionHeader.border": "#00000040",
		"sideBarTitle.foreground": "#bfc3d4",
		"sideBar.border": "#00000040",
		"sideBar.dropBackground": "#d1d5eb10",
		// tabs
		"tab.border": "#00000040",
		//
		"tab.activeBackground": "#2d323b",
		"tab.activeForeground": "#d1d5eb",
		"tab.activeBorder": "#0a6bb1",
		// "tab.activeBorderTop": "#00000000",
		// "tab.activeModifiedBorder": "#0a6bb1",
		//
		"tab.hoverBackground": "#292b33",
		"tab.hoverForeground": "#bfc3d4",
		"tab.hoverBorder": "#0a6bb180",
		//
		"tab.inactiveBackground": "#23252b",
		//"tab.inactiveForeground": "#acafbf",
		// "tab.inactiveModifiedBorder": "#0a6bb180",
		//
		// "tab.unfocusedActiveBackground": "#292b33",
		//"tab.unfocusedActiveForeground": "#d1d5eb80",
		// "tab.unfocusedActiveBorder": "#0a6bb180",
		// "tab.unfocusedActiveBorderTop": "#00000000",
		// "tab.unfocusedActiveModifiedBorder": "#0a6bb180",
		//
		// "tab.unfocusedHoverBackground": "#292b33",
		// "tab.unfocusedHoverBorder": "#0a6bb180",
		// "tab.unfocusedHoverForeground": "#acafbf",
		//
		// "tab.unfocusedInactiveBackground": "#23252b",
		// "tab.unfocusedInactiveForeground": "#acafbf80",
		// "tab.unfocusedInactiveModifiedBorder": "#0a6bb140",
		// list
		"list.activeSelectionBackground": "#2d323b",
		"list.activeSelectionForeground": "#d1d5eb",
		"list.hoverBackground": "#292b33",
		"list.hoverForeground": "#bfc3d4",
		"list.inactiveSelectionBackground": "#2d323b",
		"list.inactiveSelectionForeground": "#d1d5eb",
		//"list.deemphasizedForeground": "#8c8c8c",
		"list.errorForeground": "#f28585",
		// "list.filterMatchBackground": "#ea5c0055",
		// "list.focusHighlightForeground": "#2aaaff",
		// "list.focusOutline": "#00000000",
		// "list.highlightForeground": "#2aaaff",
		// "list.invalidItemForeground": "#b89500",
		"list.warningForeground": "#e6b583",
		// "listFilterWidget.background": "#292b33",
		// "listFilterWidget.noMatchesOutline": "#be1100",
		// "listFilterWidget.outline": "#1c1f2400",
		// "listFilterWidget.shadow": "#00000060",
		// "list.filterMatchBorder": "#f0f",
		// "list.focusAndSelectionOutline": "#f0f",
		// "list.focusBackground": "#f0f",
		// "list.focusForeground": "#f0f",
		// "list.inactiveFocusBackground": "#f0f",
		// "list.inactiveFocusOutline": "#6dbaf280",
		// "list.inactiveSelectionIconForeground": "#f0f",
		// tree
		"tree.indentGuidesStroke": "#484a59",
		// "tree.tableColumnsBorder":  "#cccccc20",
		// "tree.tableOddRowsBackground": "#cccccc0a",
		// progress bar
		"progressBar.background": "#0a6bb1",
		// editor general
		"editor.background": "#292b33",
		"editor.foreground": "#acafbf",
		"editorIndentGuide.activeBackground": "#484a59",
		"editorIndentGuide.background": "#353742",
		"editor.foldBackground": "#353742",
		"editorCursor.foreground": "#acafbf",
		// "editorCursor.background": "#353742",
		"editorPane.background": "#23252b",
		// misc
		// "editorUnicodeHighlight.background": "#bd9b0326",
		// "editorUnicodeHighlight.border": "#bd9b03",
		// "editor.inlineValuesBackground": "#ffc80033",
		// "editor.inlineValuesForeground": "#d1d5eb80",
		// "editor.linkedEditingBackground": "#ff00004d",
		// "editorLink.activeForeground": "#4e94ce",
		// inlay hints
		"editorInlayHint.background": "#353742",
		"editorInlayHint.foreground": "#9193a1",
		"editorInlayHint.parameterBackground": "#353742",
		"editorInlayHint.parameterForeground": "#9193a1",
		"editorInlayHint.typeBackground": "#353742",
		"editorInlayHint.typeForeground": "#9193a1",
		"editorRuler.foreground": "#353742",
		// brackets
		"editorBracketHighlight.foreground1": "#acafbf",
		"editorBracketHighlight.foreground2": "#6dbaf2",
		"editorBracketHighlight.foreground3": "#e6b583",
		"editorBracketHighlight.foreground4": "#f28585",
		"editorBracketHighlight.foreground5": "#69edab",
		"editorBracketMatch.background": "#353742",
		"editorBracketMatch.border": "#737580",
		// "editorBracketHighlight.unexpectedBracket.foreground": "#f14c4c",
		// "editorBracketPairGuide.activeBackground1": "#1c1f2400",
		// "editorBracketPairGuide.activeBackground2": "#1c1f2400",
		// "editorBracketPairGuide.activeBackground3": "#1c1f2400",
		// "editorBracketPairGuide.activeBackground4": "#1c1f2400",
		// "editorBracketPairGuide.activeBackground5": "#1c1f2400",
		// "editorBracketPairGuide.activeBackground6": "#1c1f2400",
		// "editorBracketPairGuide.background1": "#1c1f2400",
		// "editorBracketPairGuide.background2": "#1c1f2400",
		// "editorBracketPairGuide.background3": "#1c1f2400",
		// "editorBracketPairGuide.background4": "#1c1f2400",
		// "editorBracketPairGuide.background5": "#1c1f2400",
		// "editorBracketPairGuide.background6": "#1c1f2400",
		// editor selections
		"editor.selectionBackground": "#324454",
		"editor.inactiveSelectionBackground": "#2b3947",
		// "editor.selectionForeground": "#f0f",
		// "editor.selectionHighlightBorder": "#f0f",
		// editor highlights
		"editor.lineHighlightBackground": "#292b33",
		"editor.wordHighlightStrongBackground": "#324454",
		"editor.wordHighlightBackground": "#324454",
		"editor.hoverHighlightBackground": "#324454",
		"editor.symbolHighlightBackground": "#324454",
		"editor.selectionHighlightBackground": "#324454",
		"editor.rangeHighlightBackground": "#324454",
		"editor.findRangeHighlightBackground": "#324454",
		"editor.focusedStackFrameHighlightBackground": "#324454",
		"editor.snippetTabstopHighlightBackground": "#324454",
		"editor.stackFrameHighlightBackground": "#324454",
		"editor.snippetFinalTabstopHighlightBackground": "#324454",
		// "editor.snippetFinalTabstopHighlightBorder": "#0000",
		// "editor.lineHighlightBorder": "#0000",
		// "editor.snippetTabstopHighlightBorder": "#0000",
		// "editor.symbolHighlightBorder": "#0000",
		// "editor.wordHighlightBorder": "#0000",
		// "editor.wordHighlightStrongBorder": "#0000",
		// "editor.rangeHighlightBorder": "#0000",
		// editor search
		"editor.findMatchBackground": "#000000a0",
		//"editor.findMatchBorder": "#0000",
		"editor.findMatchHighlightBackground": "#f2858540",
		//"editor.findMatchHighlightBorder": "#0000",
		//"editor.findRangeHighlightBorder": "#0000",
		// sticky scroll
		"editorStickyScroll.background": "#23252b",
		"editorStickyScrollHover.background": "#292b33",
		// editor gutter
		"editorGutter.background": "#23252b",
		"editorGutter.addedBackground": "#69edab",
		//"editorGutter.commentRangeForeground": "#f0f", // "#37373d"
		"editorGutter.deletedBackground": "#f14c4c",
		"editorGutter.foldingControlForeground": "#737580",
		"editorGutter.modifiedBackground": "#6dbaf2",
		// editor code lens
		"editorCodeLens.foreground": "#737580",
		// command center
		"commandCenter.background": "#23252b",
		"commandCenter.activeBackground": "#2d323b",
		"commandCenter.activeBorder": "#00000040",
		"commandCenter.activeForeground": "#d1d5eb",
		"commandCenter.border": "#00000040",
		"commandCenter.foreground": "#acafbf",
		"commandCenter.inactiveBorder": "#00000040",
		"commandCenter.inactiveForeground": "#acafbf",
		// editor hover widget
		"editorHoverWidget.background": "#23252b",
		"editorHoverWidget.border": "#00000020",
		"editorHoverWidget.foreground": "#acafbf",
		//"editorHoverWidget.highlightForeground": "#f0f", // "#2aaaff"
		//"editorHoverWidget.statusBarBackground": "#f0f", // "#2c2c2d"
		// quick input (command palette for example)
		"quickInput.background": "#23252b",
		"quickInput.foreground": "#acafbf",
		"quickInputList.focusBackground": "#2d323b",
		"quickInputList.focusForeground": "#6dbaf2",
		"quickInputList.focusIconForeground": "#6dbaf2",
		"quickInputTitle.background": "#23252b",
		// editor group
		"editorGroup.border": "#00000040",
		"editorGroup.dropBackground": "#d1d5eb10",
		"editorGroup.dropIntoPromptBackground": "#292b33",
		"editorGroup.dropIntoPromptForeground": "#acafbf",
		"editorGroupHeader.border": "#1c1f24",
		"editorGroupHeader.tabsBorder": "#1c1f24",
		"editorGroupHeader.tabsBackground": "#23252b",
		"editorGroupHeader.noTabsBackground": "#23252b",
		"editorGroup.dropIntoPromptBorder": "#00000040",
		// "editorGroup.emptyBackground": "#23252b",
		// "editorGroup.focusedEmptyBorder": "#f0f",
		// editor widget
		"editorWidget.background": "#23252b",
		"editorWidget.resizeBorder": "#324454",
		"editorWidget.border": "#00000040",
		//"editorWidget.foreground": "#acafbf",
		// editor suggest widget
		"editorSuggestWidget.background": "#23252b",
		//"editorSuggestWidget.foreground": "#acafbf",
		"editorSuggestWidget.selectedForeground": "#d1d5eb",
		"editorSuggestWidget.focusHighlightForeground": "#6dbaf2",
		"editorSuggestWidget.highlightForeground": "#6dbaf2",
		"editorSuggestWidget.selectedBackground": "#2d323b",
		"editorSuggestWidget.selectedIconForeground": "#6dbaf2",
		"editorSuggestWidget.border": "#00000040",
		//"editorSuggestWidgetStatus.foreground": "#f0f", // "#acafbf80"
		// editor comments widget
		// "editorCommentsWidget.rangeActiveBackground": "#f0f", // "#0a77c51a"
		// "editorCommentsWidget.rangeActiveBorder": "#f0f", // "#0a77c566"
		// "editorCommentsWidget.rangeBackground": "#f0f", // "#0a77c51a"
		// "editorCommentsWidget.rangeBorder": "#f0f", // "#0a77c566"
		// "editorCommentsWidget.resolvedBorder": "#f0f", // "#cccccc80"
		// "editorCommentsWidget.unresolvedBorder": "#f0f", // "#0a77c5"
		// editor line numbers
		"editorLineNumber.foreground": "#737580",
		"editorLineNumber.activeForeground": "#acafbf",
		// editor breadcrumb
		"breadcrumb.activeSelectionForeground": "#d1d5eb",
		"breadcrumb.background": "#1c1f24",
		"breadcrumb.focusForeground": "#bfc3d4",
		//"breadcrumb.foreground": "#acafbf",
		"breadcrumbPicker.background": "#1c1f24",
		// editor ghost text (code completion text)
		// "editorGhostText.background": "#f0f",
		// "editorGhostText.border": "#f0f",
		"editorGhostText.foreground": "#d1d5eb56",
		// editor marker navigation (press F8 in file with error to see) 
		// "editorMarkerNavigation.background": "#292b33", // "#1e1e1e"
		// "editorMarkerNavigationError.background": "#f0f", // "#f14c4c"
		// "editorMarkerNavigationError.headerBackground": "#f0f", // "#f14c4c1a"
		// "editorMarkerNavigationInfo.background": "#f0f", // "#0a77c5"
		// "editorMarkerNavigationInfo.headerBackground": "#f0f", // "#0a77c51a"
		// "editorMarkerNavigationWarning.background": "#f0f", // "#cca700"
		// "editorMarkerNavigationWarning.headerBackground": "#f0f", // "#cca7001a"
		// editor overview ruler
		"editorOverviewRuler.addedForeground": "#69edab80", // "#487e0299"
		"editorOverviewRuler.border": "#00000040", // "#7f7f7f4d"
		// "editorOverviewRuler.bracketMatchForeground": "#f0f", // "#a0a0a0"
		// "editorOverviewRuler.commonContentForeground": "#f0f", // "#60606066"
		// "editorOverviewRuler.currentContentForeground": "#f0f", // "#40c8ae80"
		"editorOverviewRuler.deletedForeground": "#f14c4c80",
		"editorOverviewRuler.errorForeground": "#f14c4c",
		"editorOverviewRuler.findMatchForeground": "#f2858580", // "#d186167e"
		// "editorOverviewRuler.incomingContentForeground": "#f0f", // "#40a6ff80"
		"editorOverviewRuler.infoForeground": "#6dbaf2",
		"editorOverviewRuler.modifiedForeground": "#6dbaf280",
		// "editorOverviewRuler.rangeHighlightForeground": "#f0f", // "#007acc99"
		// "editorOverviewRuler.selectionHighlightForeground": "#f0f", // "#a0a0a0cc"
		"editorOverviewRuler.warningForeground": "#e6b583",
		// "editorOverviewRuler.wordHighlightForeground": "#f0f", // "#a0a0a0cc"
		// "editorOverviewRuler.wordHighlightStrongForeground": "#f0f", // "#c0a0c0cc"
		"editorOverviewRuler.background": "#23252b",
		// error lens
		// "editorError.background": "#f14c4c40",
		// "editorError.border": "#f0f",
		// "editorError.foreground": "#f0f", // "#f14c4c"
		// "errorForeground": "#f0f", // "#f48771"
		// "errorLens.errorBackground": "#f0f", // "#e454541b"
		// "errorLens.errorBackgroundLight": "#f0f", // "#e4545420"
		// "errorLens.errorForeground": "#f0f", // "#ff6464"
		// "errorLens.errorForegroundLight": "#f0f", // "#e45454"
		// "errorLens.errorMessageBackground": "#f0f", // "#e4545419"
		// "errorLens.hintBackground": "#f0f", // "#17a2a220"
		// "errorLens.hintBackgroundLight": "#f0f", // "#17a2a220"
		// "errorLens.hintForeground": "#f0f", // "#2faf64"
		// "errorLens.hintForegroundLight": "#f0f", // "#2faf64"
		// "errorLens.hintMessageBackground": "#f0f", // "#17a2a219"
		// "errorLens.infoBackground": "#f0f", // "#00b7e420"
		// "errorLens.infoBackgroundLight": "#f0f", // "#00b7e420"
		// "errorLens.infoForeground": "#f0f", // "#00b7e4"
		// "errorLens.infoForegroundLight": "#f0f", // "#00b7e4"
		// "errorLens.infoMessageBackground": "#f0f", // "#00b7e419"
		// "errorLens.statusBarErrorForeground": "#f0f", // "#ff6464"
		// "errorLens.statusBarHintForeground": "#f0f", // "#2faf64"
		// "errorLens.statusBarIconErrorForeground": "#f0f", // "#ff6464"
		// "errorLens.statusBarIconWarningForeground": "#f0f", // "#fa973a"
		// "errorLens.statusBarInfoForeground": "#f0f", // "#00b7e4"
		// "errorLens.statusBarWarningForeground": "#f0f", // "#fa973a"
		// "errorLens.warningBackground": "#f0f", // "#ff942f1b"
		// "errorLens.warningBackgroundLight": "#f0f", // "#ff942f20"
		// "errorLens.warningForeground": "#f0f", // "#fa973a"
		// "errorLens.warningForegroundLight": "#f0f", // "#ff942f"
		// "errorLens.warningMessageBackground": "#f0f", // "#ff942f19"
		// warning "lens"
		// "editorUnnecessaryCode.opacity": "#f0f", // "#1c1f24aa"
		// "editorUnnecessaryCode.border": "#f0f",
		// "editorWarning.foreground": "#f0f", // "#cca700"
		// "editorWarning.background": "#f0f",
		// "editorWarning.border": "#f0f",
		// "editorHint.border": "#f0f",
		// "editorHint.foreground": "#f0f", // "#eeeeeeb3"
		// "editorInfo.background": "#f0f",
		// "editorInfo.border": "#f0f",
		"editorInfo.foreground": "#6dbaf2", // "#0a77c5"
		// "editorWhitespace.foreground": "#f0f", // "#e3e4e229"
		// "problemsErrorIcon.foreground": "#f0f", // "#f14c4c"
		"problemsInfoIcon.foreground": "#6dbaf2", // "#0a77c5"
		// "problemsWarningIcon.foreground": "#f0f", // "#cca700"
		// "editorLightBulb.foreground": "#f0f", // "#ffcc00"
		// "editorLightBulbAutoFix.foreground": "#f0f", // "#75beff"
		// minimap
		"minimap.background": "#23252b",
		"minimap.selectionHighlight": "#324454",
		"minimap.errorHighlight": "#f28585",
		"minimap.findMatchHighlight": "#f2858588",
		"minimap.selectionOccurrenceHighlight": "#d2858588",
		"minimap.warningHighlight": "#e6b583",
		// "minimap.foregroundOpacity": "#f0f", // "#1c1f24"
		// "minimapGutter.addedBackground": "#f0f", // "#487e02"
		// "minimapGutter.deletedBackground": "#f0f", // "#f14c4c"
		// "minimapGutter.modifiedBackground": "#f0f", // "#1b81a8"
		"minimapSlider.activeBackground": "#d1d5eb20",
		// "minimapSlider.background": "#f0f", // "#79797933"
		"minimapSlider.hoverBackground": "#d1d5eb10", // "#64646459"
		// peek view
		"peekView.border": "#0a6bb180",
		"peekViewEditor.background": "#292a39",
		"peekViewEditorGutter.background": "#232432",
		"peekViewEditor.matchHighlightBackground": "#f2858560",
		// "peekViewEditor.matchHighlightBorder": "#3d6b99",
		"peekViewResult.background": "#232432",
		"peekViewResult.matchHighlightBackground": "#f2858560",
		"peekViewResult.fileForeground": "#d1d5eb",
		"peekViewResult.lineForeground": "#acafbf",
		// "peekViewResult.selectionBackground": "#f0f", // "#3399ff33"
		// "peekViewResult.selectionForeground": "#f0f", // "#d1d5eb"
		"peekViewTitle.background": "#292a3f",
		"peekViewTitleDescription.foreground": "#acafbf",
		"peekViewTitleLabel.foreground": "#d1d5eb",
		// panel
		"panel.background": "#23252b",
		"panel.border": "#00000040",
		"panel.dropBorder": "#0a6bb1",
		"panelSection.border": "#00000040",
		"panelSection.dropBackground": "#d1d5eb10",
		"panelSectionHeader.background": "#1c1f24",
		"panelTitle.activeBorder": "#0a6bb1",
		"panelTitle.activeForeground": "#d1d5eb",
		"panelTitle.inactiveForeground": "#acafbf",
		"panelInput.border": "#00000040",
		"panelSectionHeader.border": "#00000040",
		"panelSectionHeader.foreground": "#bfc3d4",
		// notifications
		"notifications.background": "#292b33",
		"notificationCenterHeader.background": "#23252b",
		"notificationCenter.border": "#00000040",
		"notificationCenterHeader.foreground": "#bfc3d4",
		"notifications.border": "#00000040",
		"notificationToast.border": "#00000040",
		// "notifications.foreground": "#acafbf",
		// "notificationLink.foreground": "#f0f", // "#0a77c5"
		// "notificationsErrorIcon.foreground": "#f0f", // "#f14c4c"
		"notificationsInfoIcon.foreground": "#6dbaf2", // "#0a77c5"
		// "notificationsWarningIcon.foreground": "#f0f", // "#cca700"
		// status bar
		"statusBar.background": "#23252b",
		"statusBar.border": "#00000040",
		"statusBarItem.warningBackground": "#ce8e1f",
		"statusBarItem.warningForeground": "#e3e7ff",
		"statusBar.debuggingBackground": "#0a6bb1",
		"statusBar.debuggingForeground": "#e3e7ff",
		// "statusBar.focusBorder": "#f0f", // "#d1d5eb"
		"statusBar.foreground": "#bfc3d4",
		"statusBar.noFolderBackground": "#23252b", // "#68217a"
		//"statusBar.noFolderForeground": "#e3e7ff",
		"statusBarItem.activeBackground": "#d1d5eb40",
		"statusBarItem.compactHoverBackground": "#d1d5eb20",
		"statusBarItem.errorBackground": "#d82828",
		"statusBarItem.errorForeground": "#e3e7ff",
		// "statusBarItem.focusBorder": "#f0f", // "#d1d5eb"
		"statusBarItem.hoverBackground": "#d1d5eb20",
		// "statusBarItem.prominentBackground": "#f0f", // "#1c1f2480"
		"statusBarItem.prominentForeground": "#d1d5eb",
		// "statusBarItem.prominentHoverBackground": "#f0f", // "#1c1f244d"
		// "statusBar.debuggingBorder": "#f0f",
		// "statusBar.noFolderBorder": "#f0f",
		// picker group
		"pickerGroup.border": "#353742",
		//"pickerGroup.foreground": "#f0f", // "#0a77c5"
		// outline symbols
		"symbolIcon.arrayForeground": "#acafbf",
		"symbolIcon.booleanForeground": "#f28585",
		"symbolIcon.classForeground": "#69edab",
		"symbolIcon.colorForeground": "#acafbf",
		"symbolIcon.constantForeground": "#d1d5eb",
		"symbolIcon.constructorForeground": "#6dbaf2",
		"symbolIcon.enumeratorForeground": "#69edab",
		"symbolIcon.enumeratorMemberForeground": "#6dbaf2",
		"symbolIcon.eventForeground": "#acafbf",
		"symbolIcon.fieldForeground": "#d1d5eb",
		"symbolIcon.fileForeground": "#acafbf",
		"symbolIcon.folderForeground": "#acafbf",
		"symbolIcon.functionForeground": "#6dbaf2",
		"symbolIcon.interfaceForeground": "#eddd9a",
		"symbolIcon.keyForeground": "#acafbf",
		"symbolIcon.keywordForeground": "#f28585",
		"symbolIcon.methodForeground": "#6dbaf2",
		"symbolIcon.moduleForeground": "#acafbf",
		"symbolIcon.namespaceForeground": "#acafbf",
		"symbolIcon.nullForeground": "#acafbf",
		"symbolIcon.numberForeground": "#e6b583",
		"symbolIcon.objectForeground": "#69edab",
		"symbolIcon.operatorForeground": "#acafbf",
		"symbolIcon.packageForeground": "#acafbf",
		"symbolIcon.propertyForeground": "#d1d5eb",
		"symbolIcon.referenceForeground": "#acafbf",
		"symbolIcon.snippetForeground": "#acafbf",
		"symbolIcon.stringForeground": "#e6b583",
		"symbolIcon.structForeground": "#69edab",
		"symbolIcon.textForeground": "#acafbf",
		"symbolIcon.typeParameterForeground": "#69edab",
		"symbolIcon.unitForeground": "#acafbf",
		"symbolIcon.variableForeground": "#acafbf",
		// extensions
		// "extensionBadge.remoteBackground": "#f0f", // "#007acc"
		// "extensionBadge.remoteForeground": "#f0f", // "#d1d5eb"
		// "extensionButton.background": "#f0f", // "#0e639c"
		// "extensionButton.foreground": "#d1d5eb", // "#d1d5eb"
		// "extensionButton.hoverBackground": "#f0f", // "#1177bb"
		// "extensionButton.prominentBackground": "#0a6bb1", // "#0e639c"
		// "extensionButton.prominentForeground": "#d1d5eb", // "#d1d5eb"
		// "extensionButton.prominentHoverBackground": "#f0f", // "#1177bb"
		// "extensionButton.separator": "#ffffff80", // "#d1d5eb66"
		"extensionIcon.preReleaseForeground": "#377c5a", // "#1d9271"
		//"extensionIcon.sponsorForeground": "#d758b3",
		"extensionIcon.starForeground": "#df9355",
		"extensionIcon.verifiedForeground": "#0a77c5",
		// terminal
		"terminal.background": "#1c1f24",
		"terminal.foreground": "#acafbf",
		"terminal.ansiGreen": "#69edab",
		"terminal.ansiBrightGreen": "#50e080",
		"terminal.ansiBrightRed": "#ee5c5c",
		"terminal.ansiRed": "#f28585",
		"terminal.ansiBlue": "#6bbaf2",
		"terminal.ansiBrightBlue": "#55aff0",
		"terminal.ansiCyan": "#74dada",
		"terminal.ansiBrightCyan": "#41ffff",
		"terminal.ansiBrightYellow": "#ffda47",
		"terminal.ansiYellow": "#eddd9a",
		"terminal.ansiBrightMagenta": "#e24ae2",
		"terminal.ansiMagenta": "#e086e0",
		"terminal.ansiBrightWhite": "#d1d5eb",
		"terminal.ansiWhite": "#acafbf",
		"terminal.ansiBrightBlack": "#737580",
		"terminal.ansiBlack": "#292b33",
		"terminal.border": "#00000040", // "#80808059"
		"terminal.dropBackground": "#d1d5eb10", // "#53595d80"
		// "terminal.findMatchBackground": "#f0f", // "#515c6a"
		// "terminal.findMatchHighlightBackground": "#ff848440", // "#ea5c0055"
		// "terminal.selectionBackground": "#324454", // "#264f78"
		// "terminalCommandDecoration.defaultBackground": "#f0f", // "#d1d5eb40"
		// "terminalCommandDecoration.errorBackground": "#f0f", // "#f14c4c"
		// "terminalCommandDecoration.successBackground": "#f0f", // "#1b81a8"
		// "terminalOverviewRuler.cursorForeground": "#f0f", // "#a0a0a0cc"
		// "terminalOverviewRuler.findMatchForeground": "#f0f", // 
		// "terminal.findMatchBorder": "#f0f", // "#f0f"
		// "terminal.findMatchHighlightBorder": "#f0f", // "#f0f"
		// "terminal.selectionForeground": "#f0f", // "#f0f"
		// "terminal.tab.activeBorder": "#f0f", // "#f0f"
		"terminalCursor.background": "#292b33", // "#f0f"
		"terminalCursor.foreground": "#acafbf", // "#f0f"
		// charts
		"charts.blue": "#6bbaf2",
		"charts.foreground": "#acafbf",
		"charts.green": "#69edab",
		"charts.lines": "#acafbf80",
		"charts.orange": "#df9355",
		"charts.purple": "#e086e0",
		"charts.red": "#f28585",
		"charts.yellow": "#eddd9a",
		// settings
		"settings.checkboxBackground": "#23252b",
		// "settings.checkboxBorder": "#f0f", // "#3c3c3c"
		// "settings.checkboxForeground": "#f0f", // "#f0f0f0"
		"settings.dropdownBackground": "#23252b",
		// "settings.dropdownBorder": "#f0f", // "#3c3c3c"
		// "settings.dropdownForeground": "#acafbf", // "#f0f0f0"
		// "settings.dropdownListBorder": "#f0f", // "#1c1f24"
		"settings.focusedRowBackground": "#2d323b",
		// "settings.focusedRowBorder": "#00000030", // "#007fd4"
		"settings.headerBorder": "#00000060",
		"settings.headerForeground": "#d1d5eb",
		"settings.modifiedItemIndicator": "#0a6bb1",
		"settings.numberInputBackground": "#23252b",
		//"settings.numberInputForeground": "#acafbf", // "#cccccc"
		"settings.rowHoverBackground": "#2d323b80",
		// "settings.sashBorder": "#f0f", // "#80808059"
		"settings.textInputBackground": "#23252b",
		// "settings.textInputForeground": "#acafbf", // "#cccccc"
		// "settings.numberInputBorder": "#f0f",
		// "settings.textInputBorder": "#f0f",
		// git
		// "gitDecoration.addedResourceForeground": "#f0f", // "#81b88b"
		// "gitDecoration.conflictingResourceForeground": "#f0f", // "#e4676b"
		// "gitDecoration.deletedResourceForeground": "#f0f", // "#c74e39"
		// "gitDecoration.ignoredResourceForeground": "#f0f", // "#8c8c8c"
		// "gitDecoration.modifiedResourceForeground": "#e6b583", // "#e2c08d"
		// "gitDecoration.renamedResourceForeground": "#f0f", // "#73c991"
		// "gitDecoration.stageDeletedResourceForeground": "#f0f", // "#c74e39"
		// "gitDecoration.stageModifiedResourceForeground": "#f0f", // "#e2c08d"
		// "gitDecoration.submoduleResourceForeground": "#f0f", // "#8db9e2"
		// "gitDecoration.untrackedResourceForeground": "#f0f", // "#73c991"
		// diff
		"diffEditor.insertedLineBackground": "#14df7920",
		"diffEditor.insertedTextBackground": "#14df7920",
		"diffEditor.removedLineBackground": "#f14c1c20",
		"diffEditor.removedTextBackground": "#f14c1c20",
		"diffEditorGutter.insertedLineBackground": "#14df7920",
		"diffEditorGutter.removedLineBackground": "#f14c1c20",
		"diffEditorOverview.insertedForeground": "#14df7980",
		// "diffEditor.border": "#1c1f24",
		// "diffEditor.insertedTextBorder": "#f0f",
		// "diffEditor.removedTextBorder": "#f0f",
		"diffEditorOverview.removedForeground": "#f14c1c80",
		"diffEditor.diagonalFill": "#424452", // "#cccccc33"
		// merge
		// "merge.border": "#f0f",
		// "merge.commonContentBackground": "#f0f", // "#60606029"
		// "merge.commonHeaderBackground": "#f0f", // "#60606066"
		// "merge.currentContentBackground": "#f0f", // "#40c8ae33"
		// "merge.currentHeaderBackground": "#f0f", // "#40c8ae80"
		// "merge.incomingContentBackground": "#f0f", // "#40a6ff33"
		// "merge.incomingHeaderBackground": "#f0f", // "#40a6ff80"
		// merge editor
		// "mergeEditor.change.background": "#f0f", // "#9bb95533"
		// "mergeEditor.change.word.background": "#f0f", // "#9ccc2c33"
		// "mergeEditor.changeBase.background": "#f0f", // "#4b1818"
		// "mergeEditor.changeBase.word.background": "#f0f", // "#6f1313"
		// "mergeEditor.conflict.handled.minimapOverViewRuler": "#f0f", // "#adaca8ee"
		// "mergeEditor.conflict.handledFocused.border": "#f0f", // "#c1c1c1cc"
		// "mergeEditor.conflict.handledUnfocused.border": "#f0f", // "#86868649"
		// "mergeEditor.conflict.input1.background": "#f0f", // "#40c8ae33"
		// "mergeEditor.conflict.input2.background": "#f0f", // "#40a6ff33"
		// "mergeEditor.conflict.unhandled.minimapOverViewRuler": "#f0f", // "#fcba03"
		// "mergeEditor.conflict.unhandledFocused.border": "#f0f", // "#ffa600"
		// "mergeEditor.conflict.unhandledUnfocused.border": "#f0f", // "#ffa6007a"
		// "mergeEditor.conflictingLines.background": "#f0f", // "#ffea0047"
		// testing
		// "testExplorer.errorDecorationBackground": "#f0f", // "#5a1d1d"
		"testing.iconErrored": "#f14c4c",
		"testing.iconFailed": "#f14c4c",
		"testing.iconPassed": "#69edab",
		// "testing.iconQueued": "#f0f", // "#cca700"
		// "testing.iconSkipped": "#f0f", // "#848484"
		// "testing.iconUnset": "#f0f", // "#848484"
		// "testing.message.error.decorationForeground": "#f0f", // "#f14c4c"
		// "testing.message.error.lineBackground": "#f0f", // "#ff000033"
		// "testing.message.info.decorationForeground": "#f0f", // "#acafbf80"
		// "testing.peekBorder": "#f0f", // "#f14c4c"
		// "testing.peekHeaderBackground": "#f0f", // "#f14c4c1a"
		"testing.runAction": "#69edab",
		// "testing.message.info.lineBackground": "#f0f", // "#f0f"
		// notebook
		"notebook.cellBorderColor": "#00000040",
		"notebook.cellEditorBackground": "#292b33",
		"notebook.cellInsertionIndicator": "#324454", // "#007fd4"
		"notebook.cellStatusBarItemHoverBackground": "#acafbf20", // "#d1d5eb26"
		"notebook.cellToolbarSeparator": "#00000040", // "#80808059"
		"notebook.editorBackground": "#23252b", // "#1e1e1e"
		"notebook.focusedCellBorder": "#324454", // "#007fd4"
		"notebook.focusedEditorBorder": "#324454", // "#007fd4"
		"notebook.inactiveFocusedCellBorder": "#324454", // "#37373d"
		//"notebook.selectedCellBackground": "#f0f", // "#37373d"
		//"notebook.selectedCellBorder": "#f0f", // "#37373d"
		//"notebook.symbolHighlightBackground": "#f0f", // "#d1d5eb0b"
		// "notebookScrollbarSlider.activeBackground": "#f0f", // "#bfbfbf66"
		// "notebookScrollbarSlider.background": "#f0f", // "#79797966"
		// "notebookScrollbarSlider.hoverBackground": "#f0f", // "#646464b3"
		"notebookStatusErrorIcon.foreground": "#f14c4c", // "#f48771"
		"notebookStatusRunningIcon.foreground": "#6dbaf2", // "#cccccc"
		"notebookStatusSuccessIcon.foreground": "#69edab", // "#89d185"
		// "notebook.cellHoverBackground": "#f0f",
		// "notebook.focusedCellBackground": "#f0f",
		// "notebook.inactiveSelectedCellBorder": "#f0f",
		"notebook.outputContainerBackgroundColor": "#1c1f24",
		"notebook.outputContainerBorderColor": "#00000040",
		// debug view
		//"debugToolBar.border": "#00000040",
		//"debugConsole.errorForeground": "#f0f", // "#f48771"
		//"debugConsole.infoForeground": "#6dbaf2", // "#0a77c5"
		//"debugConsole.sourceForeground": "#f0f", // "#cccccc"
		//"debugConsole.warningForeground": "#f0f", // "#cca700"
		//"debugConsoleInputIcon.foreground": "#f0f", // "#cccccc"
		//"debugExceptionWidget.background": "#f0f", // "#420b0d"
		//"debugExceptionWidget.border": "#f0f", // "#a31515"
		"debugIcon.breakpointCurrentStackframeForeground": "#f14c4c",
		"debugIcon.breakpointDisabledForeground": "#737580",
		"debugIcon.breakpointForeground": "#f14c4c",
		//"debugIcon.breakpointStackframeForeground": "#f0f",
		//"debugIcon.breakpointUnverifiedForeground": "#f0f",
		"debugIcon.continueForeground": "#69edab",
		"debugIcon.disconnectForeground": "#f28585",
		"debugIcon.pauseForeground": "#cc854b",
		"debugIcon.restartForeground": "#e6b583",
		"debugIcon.startForeground": "#69edab",
		"debugIcon.stepBackForeground": "#6dbaf2",
		"debugIcon.stepIntoForeground": "#6dbaf2",
		"debugIcon.stepOutForeground": "#6dbaf2",
		"debugIcon.stepOverForeground": "#6dbaf2",
		"debugIcon.stopForeground": "#f14c4c",
		"debugTokenExpression.boolean": "#e6b583",
		"debugTokenExpression.error": "#f28585",
		"debugTokenExpression.name": "#6dbaf2",
		"debugTokenExpression.number": "#e6b583",
		"debugTokenExpression.string": "#e6b583",
		"debugTokenExpression.value": "#e6b583",
		"debugToolBar.background": "#2d323b",
		"debugView.exceptionLabelBackground": "#6c2022",
		//"debugView.exceptionLabelForeground": "#acafbf",
		"debugView.stateLabelBackground": "#292b33",
		//"debugView.stateLabelForeground": "#acafbf",
		"debugView.valueChangedHighlight": "#69edaba0",
		// keybindings
		"keybindingLabel.background": "#2d323b", // "#8080802b"
		"keybindingLabel.border": "#00000060", // "#33333399"
		"keybindingLabel.bottomBorder": "#d1d5eb10", // "#44444499"
		"keybindingLabel.foreground": "#acafbf", // "#cccccc"
		// "keybindingTable.headerBackground": "#f0f", // "#cccccc0a"
		// "keybindingTable.rowsBackground": "#f0f", // "#cccccc0a"
		// Markdown
		"markdown.extension.editor.codeSpan.background": "#0000",
		"markdown.extension.editor.codeSpan.border": "#0000",
		//"markdown.extension.editor.formattingMark.foreground": "#f0f", // "#e3e4e229"
		//"markdown.extension.editor.trailingSpace.background": "#f0f", // "#cccccc33"
		// Unset
		// "interactive.activeCodeBorder": "#f0f", // "#0a77c5"
		// "interactive.inactiveCodeBorder": "#f0f", // "#37373d"
		// "rust_analyzer.syntaxTreeBorder": "#f0f", // "#d1d5eb"
		// "sash.hoverBorder": "#f0f", // "#007fd4"
		// "scm.providerBorder": "#f0f", // "#1c1f24"
		// "walkThrough.embeddedEditorBackground": "#f0f", // "#f0f"
	},
	"tokenColors": [
		{
			"name": "DEV: highlight missing colors",
			"scope": [
				//"",
			],
			"settings": {
				"foreground": "#f0f",
				"fontStyle": ""
			}
		},
		{
			"scope": "token.info-token",
			"settings": {
				"foreground": "#6dbaf2"
			}
		},
		{
			"scope": "token.warn-token",
			"settings": {
				"foreground": "#df9355"
			}
		},
		{
			"scope": "token.error-token",
			"settings": {
				"foreground": "#f14c4c"
			}
		},
		{
			"scope": "token.debug-token",
			"settings": {
				"foreground": "#b180d7"
			}
		},
		// New
		{
			"scope": [
				"comment",
				// lang specific
				"string.quoted.docstring", // Python: docstring
				"string.quoted.docstring storage.type.string.python", // Python: docstring prefixes like r f
				"punctuation.definition.comment.yaml", // YAML: comment # sign
				"markup.underline.link", // Markdown: actual link, it's not that important, make it dark
				"markup.link", // AsciiDoc: actual link, it's not that important, make it dark
				"source.ini comment punctuation", // INI: comment specified ;
			],
			"settings": {
				"foreground": "#737580",
				"fontStyle": ""
			}
		},
		{
			"name": "modules, namespaces",
			"scope": [
				"entity.name.namespace",
				"entity.name.module",
				"entity.name.package", // Kotlin: package name
				// lang specific
				"storage.modifier.package", // Java: package name
				"storage.modifier.import", // Java: imports
				"entity.name.type.namespace", // C#: namespace names
				"entity.name.section.fsharp", // F#: module 
				// "entity.name.type.module", // Ruby: module, this only changes the color on declaration, disable it for consistency with other location where a module name could be used
				"string.quoted.double.include.cpp", // C++: includes
				"string.quoted.other.lt-gt.include.cpp", // C++: includes
				"entity.name.tag.namespace", // XML: namespace
				"punctuation.separator.namespace", // XML: namespace separator :
			],
			"settings": {
				"foreground": "#acafbf",
				"fontStyle": "",
			}
		},
		{
			"name": "regular variable",
			"scope": [
				"variable",
				"support.variable",
				// lang specific
				"meta.interpolation.rust", // Rust: interpolation inside the {}
				"meta.preprocessor.cs", // C# preprocessor text
				"string.unquoted.preprocessor.message.cs", // C# preprocessor text
				"text.html.php", // PHP: base text color
				"text.html.markdown", // Markdown: base text color
				"text.html source", // HTML: CSS, JS base color in HTMLs
			],
			"settings": {
				"foreground": "#acafbf",
				"fontStyle": "",
			}
		},
		{
			"name": "constants, statics",
			"scope": [
				"variable.other.constant",
				"support.constant",
				"constant.other",
				// lang specific
				"variable.other.readwrite.class.ruby", // Ruby: static class variables
				"source.ruby variable.other.readwrite.global", // Ruby: global variables
			],
			"settings": {
				"foreground": "#d1d5eb",
			}
		},
		// {
		// 	"name": "function parameters",
		// 	"scope": [
		// 		"variable.parameter",
		// 		"entity.name.variable.parameter", // C# parameters, they are only detected in function decl, don't highlight then
		// 		// lang specific
		// 		 "meta.parameter-clause.swift", // Swift parameters
		// 	],
		// 	"settings": {
		// 		"foreground": "#d1d5eb",
		// 		"fontStyle": ""
		// 	}
		// },
		{
			"name": "globals",
			"scope": [
				"variable.other.global",
				"entity.name.variable.global",
			],
			"settings": {
				"foreground": "#d1d5eb",
				"fontStyle": ""
			}
		},
		{
			"name": "fields, properties, members",
			"scope": [
				"variable.other.property",
				"variable.other.field",
				"variable.other.object.property",
				"variable.other.object.field",
				"variable.object.property",
				"variable.object.field",
				"entity.name.variable.property",
				"entity.name.variable.field",
				// lang specific
				"entity.name.variable.event", // C#: event name
				"variable.other.event", // C#: event name
				"meta.objectliteral meta.object.member meta.object-literal.key", // JS, TS, JSX; TSX: properties in definitions
				"entity.name.record.field.elm", // Elm: field
				"variable.other.readwrite.instance.ruby", // Ruby: instance variables (properties)
				"meta.var.expr meta.tag meta.tag.attributes entity.other.attribute-name", //JSX, TSX: tag attribute name
				"text.xml entity.other.attribute-name", // XML: attribute names
				"text.html entity.other.attribute-name", // HTML: attribute names
				"source.css support.type.property-name", // CSS: property names
				"entity.other.attribute-name.css", // CSS: attribute name in selectors
			],
			"settings": {
				"foreground": "#d1d5eb",
				"fontStyle": ""
			}
		},
		{
			// slightly darker in docs
			"name": "fields, properties, members in docs",
			"scope": [
				"comment variable.parameter", // Java: parameter in docs
				"comment variable.other.jsdoc", // JS, TS, JSX; TSX: parameter in docs
				"entity.other.attribute-name.localname.cs", // C# doc comment tag attribute name
				"comment.documentation.attribute.name.cs", // C#: doc comment tags with semantic highlighting
			],
			"settings": {
				"foreground": "#d1d5ebb9",
				"fontStyle": ""
			}
		},
		{
			"name": "misc special variable",
			"scope": [
				"variable.other.metavariable.name.rust", // Rust: macro metavariable name
				"keyword.operator.macro.dollar.rust", // Rust: macro metavariable $
			],
			"settings": {
				"foreground": "#d1d5eb",
				"fontStyle": ""
			}
		},
		{
			"name": "config file keys/variables",
			"scope": [
				"keyword.other.definition.ini", // INI: keys
				"support.type.property-name.json", // JSON: keys
				"support.type.property-name.toml", // TOML: keys
				"entity.name.tag.yaml", // YAML: keys
				"entity.name.tag.ron", // RON: key
				"punctuation.support.type.property-name.json", // JSON: " in property names
				"variable.other.makefile", // Makefile: variable
				"source.hcl variable", // HCL: 
				"keyword.other.cabal", // Cabal: keys
				"variable.name.pestfile", // Pest: variables
			],
			"settings": {
				"foreground": "#d1d5eb",
				"fontStyle": ""
			}
		},
		{
			"name": "keywords",
			"scope": [
				"keyword",
				"keyword.other",
				"storage.modifier", // pub, mut, static etc
				"storage.type", // class, struct, enum etc
				"variable.language", // self, this, cls etc
				"constant.language", // true, false, null, nil etc
				// lang specific
				"entity.name.function.macro.rules.rust", // Rust: macro_rules!
				// C++: type keywords in templates
				"storage.type.template.argument.class.cpp",
				"storage.type.template.argument.unsigned.cpp",
				"storage.type.template.argument.signed.cpp",
				"storage.type.template.argument.typename.cpp",
				"storage.type.template.argument.struct.cpp",
				"storage.type.template.argument.enum.cpp",
				"storage.type.template.argument.union.cpp",
				"variable.parameter.function.language.special.self.python", // Python: self function parameter
				"variable.parameter.function.language.special.cls.python", // Python: cls function parameter
				"keyword.type.go", // Go: type keyword
				"entity.name.function.asciidoc", // AsciiDoc: keywords like link, image, etc
				"entity.name.section.cabal", // Cabal: section headers, like keyword
			],
			"settings": {
				"foreground": "#f28585",
				"fontStyle": ""
			}
		},
		{
			"name": "keywords in comments",
			"scope": [
				"keyword.other.documentation", // Java: doc keywords/tags
				"source.cs comment entity.name.tag", // C#: doc comment tags
				"comment.documentation.name.cs", // C#: doc comment tags with semantic highlighting
				"storage.type.class.doxygen", // Doxygen: doc tags
				"comment storage.type.class.jsdoc", // JS, TS: doc keywords/tags
				"keyword.other.phpdoc", // PHP: doc kws
			],
			"settings": {
				"foreground": "#f28585a0",
				"fontStyle": ""
			}
		},
		{
			"name": "operators",
			"scope": [
				"keyword.operator",
				// lang specific
				"source.cpp storage.modifier.reference", // C++: &
				"source.cpp storage.modifier.pointer", // C++: *
				"entity.name.function.operator", // C++ overloaded operators
				"entity.name.function.member.overload.cs", // C#: overloaded operators
				"source.fsharp keyword.symbol", // F#: operators and punctuation
				"keyword.symbol.fsharp", // F#: operators and punctuation with semantic highlighting
				"keyword.control.ternary.java", // Java: ternary
				"keyword.control.ternary.kotlin", // Kotlin: ternary
				"variable.language.wildcard.java", // Java: * in import
				"variable.language.wildcard.kotlin", // Kotlin: * in imports
				"meta.import constant.language.import-export-all", // JS, TS, JSX, TSX: wildcard in imports
				"entity.name.tag.wildcard", // CSS: *
				"entity.other.document.begin.yaml", // YAML: --- doc end/begin
				"meta.separator.markdown", // Markdown: separator line --- or ***
				"source.yaml keyword.control", // YAML: | >
			],
			"settings": {
				"foreground": "#acafbf",
				"fontStyle": ""
			}
		},
		{
			"name": "punctuation",
			"scope": [
				"source.rust meta.use punctuation", // Rust: punctuation in use statements, 'meta.use' is used to overload function names blue 
				"meta.attribute.rust punctuation", // Rust: punctuation in attributes
				"punctuation.definition.decorator", // Python: @ in attributes
				"punctuation.separator.inheritance.ruby", // Ruby: < separator
				"storage.type.function.arrow.java", // Java: -> in lambdas
				"punctuation.definition.directive.cpp", // C++: # in preprocessor directives
				"source.fsharp support.function.attribute", // F#: attributes
				"meta.var.expr meta.arrow storage.type.function.arrow", // JS, TS, JSX, TSX: fat arrow
				"source meta.arrow storage.type.function.arrow", // JS, TS, JSX, TSX: => in lambdas
				// Go's imports are strings, they are detected by semantic highlighting as 
				// namespace, which colors them gray, but the quotes are not captured
				// and they are yellow as strings.
				// I think it looks better if there are gray quotes around strings
				// than yellow quotes around imports. With semantic highlighting 
				// the quotes around string are captured and colored yellow,
				// without it they remain gray.
				"source.go punctuation.definition.string",
				"meta.selector.css punctuation", // CSS: punctuation in selectors
				"source.css keyword punctuation", // CSS: @ in keywords
				"keyword.other.elm", // Elm: operators =
				"keyword.other.colon.elm", // Elm: colon
				"keyword.other.period.elm", // Elm: dot
				"text.html meta.tag", // HTML: punctuation
				"text.xml meta.tag", // XML: punctuation
				"source.yaml punctuation", // YAML: punctuation
				"text.asciidoc punctuation", // AsciiDoc: punctuation
				"text.asciidoc markup.heading.block-attribute", // AsciiDoc: attribute block brackets
				"text.asciidoc markup.code markup.heading", // AsciiDoc: code block attributes brackets
				"source.ini punctuation", // INI: punctuation
			],
			"settings": {
				"foreground": "#acafbf",
				"fontStyle": ""
			}
		},
		{
			"name": "word like operators, should be colored as keywords",
			"scope": [
				"keyword.operator.new",
				"keyword.operator.expression",
				"keyword.operator.instanceof",
				"keyword.operator.logical.python",
				"keyword.operator.wordlike",
				"keyword.operator.noexcept",
			],
			"settings": {
				"foreground": "#f28585",
				"fontStyle": ""
			}
		},
		{
			"name": "traits/interfaces",
			"scope": [
				"entity.name.type.trait",
				"entity.name.type.interface",
			],
			"settings": {
				"foreground": "#eddd9a",
				"fontStyle": ""
			}
		},
		{
			"name": "attributes/annotations",
			"scope": [
				"entity.other.attribute-name",
				"entity.name.type.annotation",
				// lang specific
				"meta.attribute.rust", // Rust: attributes
				"entity.name.function.decorator.python", // Python: decorators that are functions without semantic highlighting
				"source.python meta.function.decorator support.type", // Python: decorators that are classes without semantic highlighting
				"storage.type.annotation.java", // Java: annotations
				"storage.type.annotation.kotlin", // Kotlin: annotations
				"source.cs keyword.preprocessor", // C#: preprocessor kws without semantic highlighting
				"keyword.preprocessor.cs", // C#: preprocessor kws with semantic highlighting
				"source.cpp keyword.control.directive", // C++ preprocessor
				"keyword.other.attribute-specifier.cs", // C#: attribute specific keywords like method:
				"source.cpp keyword.operator.alignas", // C++: alignas
				"source.cpp support.other.attribute", // C++: alignas
				"text.asciidoc support.constant.attribute-name", // AsciiDoc: attributes
				"text.asciidoc markup.meta.attribute-list", // AsciiDoc: attribute list
				"text.asciidoc markup.meta.attribute-list entity.name.function.asciidoc", // AsciiDoc: attribute list
			],
			"settings": {
				"foreground": "#eddd9a",
				"fontStyle": ""
			}
		},
		{
			"name": "strings",
			"scope": [
				"string",
				// lang specific
				"constant.other.rune.go", // Go: rune
				"storage.type.string.python", // Python: string prefixes like r 
				"keyword.interpolation.scala", // Scala: string s prefix
				"meta.jsx.children", // JSX, TSX: element input
				"text.html", // HTML: text
				"text.xml", // XML: text
				"source.cabal", // Cabal: text
				"keyword.operator.cabal", // Cabal: operators in text
				"source.ini", // INI: text
				"source.ini punctuation.definition.string", // INI: string quotes
				"source.yaml punctuation.definition.string", // YAML: string quotes
				"meta.property-value.css support.constant", // CSS: property values
				"source.css string punctuation", // CSS: string quotes
			],
			"settings": {
				"foreground": "#e6b583",
				"fontStyle": ""
			}
		},
		{
			"name": "string escapes",
			"scope": [
				"constant.character.escape",
				"constant.character.string.escape", // F#: escape chars
				// lang specific
				"keyword.format.specifier.fsharp", // F#: format specifiers
				"constant.character.format.placeholder.other.python", // Python: f-string input braces
				"storage.type.format.python", // Python: f-string input formats :.2f
				"punctuation.definition.interpolation", // Rust: braces around interpolation are like escapes
				"meta.var.expr string.template meta.template.expression punctuation.definition.template-expression", // JS, TS: string template ${}
				"meta.var.expr meta.tag meta.jsx.children punctuation.section.embedded", // JSX, TSX: element embedded input brackets
				"source.kotlin variable.string-escape", // Kotlin: template string single input like $a
				"source.kotlin meta.template.expression", // Kotlin: template string block input text
				"source.kotlin entity.string.template", // Kotlin: template string block (Kotlin Language extension)
				"source.scala punctuation.definition.template-expression", // Scala: templars $
				"text.xml constant.character.entity", // XML: escapes like &lt;
				"text.html constant.character.entity", // HTML: escapes like &lt;
				"source.ruby punctuation.section.embedded", // Ruby: template input
				"source.hcl keyword.other.interpolation", // HCL: string interpolation ${}
			],
			"settings": {
				"foreground": "#df9355",
				"fontStyle": ""
			}
		},
		{
			"name": "strings in comments",
			"scope": [
				"comment string",
			],
			"settings": {
				"foreground": "#e6b583b9",
				"fontStyle": ""
			}
		},
		{
			"name": "string escapes in comments",
			"scope": [
				"comment constant.character.escape",
			],
			"settings": {
				"foreground": "#df9355b9",
				"fontStyle": ""
			}
		},
		{
			"name": "numeric literals",
			"scope": [
				"constant.numeric",
				"storage.type.number.python", // Python: number prefix like 0x or 0b
				"source.rust constant.numeric entity.name.type", // Rust: number type suffix
				"source.cpp keyword.other.unit", // C++: number suffixes
				"keyword.other.unit", // CSS: units, like px in 3px, color like the number
				"meta.var.expr constant.numeric storage.type.numeric", // JS, TS, JSX, TSX: number suffix
			],
			"settings": {
				"foreground": "#e6b583",
				"fontStyle": ""
			}
		},
		{
			"name": "other literals",
			"scope": [
				"meta.property-value.css", // CSS property value
				"constant.other.time.datetime.offset.toml", // time in toml
				"constant.other.time.datetime.local.toml", // time in toml
				"constant.other.time.date.toml", // time in toml
				"constant.other.time.time.toml", // time in toml
				"constant.other.timestamp.yaml", // time in yaml
			],
			"settings": {
				"foreground": "#e6b583",
				"fontStyle": ""
			}
		},
		{
			"name": "labels",
			"scope": [
				"entity.name.label",
				// lang specific
				"entity.name.type.lifetime.rust", // Rust: lifetime name without semantic highlighting
				"punctuation.definition.lifetime.rust", // Rust: lifetime ' without semantic highlighting
				"storage.modifier.lifetime.rust", // Rust: lifetime 'name with semantic highlighting
				"variable.parameter.definition.label.latex", // TeX: labels
				"entity.other.attribute-name.id.css", // CSS: ids
				"source.ruby constant.language.symbol", // Ruby: symbols
			],
			"settings": {
				"foreground": "#df9355",
				"fontStyle": ""
			}
		},
		{
			"name": "types (including primitives)",
			"scope": [
				"entity.name.type",
				"entity.name.class",
				"entity.name.struct",
				"entity.name.enum",
				"entity.name.tag",
				"support.type", // std lib types
				"support.class",
				"support.struct",
				"support.enum",
				"entity.other.inherited-class",
				// lang specific rules
				"variable.other.metavariable.specifier.rust", // Rust: macro type specifier :ty or :literal
				"source.java storage.type", // Java: types
				"source.haskell storage.type", // Haskell: types
				"source.haskell constant.other", // Haskell: types in uses, unfortunately this also colors True/False and similar but I think this looks better overall
				"source.go storage.type", // Go: builtin types
				"source.cpp storage.type.integral", // C++: builtin types
				"source.cpp storage.type.built-in", // C++: builtin types
				"source.cpp meta.template storage.type.template.argument", // C++: template type parameters
				"source.elm storage.type", // Elm: types
				"keyword.type", // C# builtin types like double, 
				"entity.other.attribute-name.class.css", // CSS: class
				"entity.other.attribute-name.pseudo-class.css", // CSS: pseudo-class
				"entity.other.attribute-name.pseudo-element.css", // CSS: pseudo-element
				"meta.selector.css", // CSS: custom selectors
				"meta.var.expr new.expr meta.function-call entity.name.function", // JS, TS, JSX, TSX: function calls with new
			],
			"settings": {
				"foreground": "#69edab",
				"fontStyle": ""
			}
		},
		{
			"name": "types (including primitives) in docs",
			"scope": [
				"comment.block entity.name.type", // Java: types in doc comments
				"comment keyword.other.type.php", // PHP: built-in types in doc comments
				"comment support.class.php", // PHP: other types in doc comments
				"comment support.class.builtin.php", // PHP: builtin-types in doc comments
			],
			"settings": {
				"foreground": "#69edabb9",
				"fontStyle": ""
			}
		},
		{
			"name": "Enum members",
			"scope": [
				"variable.other.enummember", // Rust: enum members from semantic highlighting
				// lang specific
				"entity.name.variable.enum-member.cs", // C# enum members
				"constant.type-constructor.elm", // Elm: record fields
				"constant.other.enum.java", // Java: enum member
			],
			"settings": {
				"foreground": "#d1d5eb",
				"fontStyle": ""
			}
		},
		{
			"name": "function like",
			"scope": [
				"entity.name.function",
				"support.function", // std lib functions
				// lang specific
				"meta.function-call.generic.python", // Python: function calls
				// C++: function like operators
				"keyword.operator.cast",
				"keyword.operator.sizeof",
				"keyword.operator.alignof",
				"keyword.operator.typeid",
				"entity.name.function.operator.member.cpp", // C++: operator overload definition function
			],
			"settings": {
				"foreground": "#6dbaf2",
				"fontStyle": ""
			}
		},
		{
			"name": "tables, groups, tags, headings",
			"scope": [
				"support.type.property-name.table.toml", // TOML: table names
				"support.type.property-name.array.toml", // TOML: array names
				"entity.name.section.group-title.ini", // INI: group title
			],
			"settings": {
				"foreground": "#69edab",
				"fontStyle": ""
			}
		},
		{
			"name": "links",
			"scope": [
				"text.html.markdown string.other.link", // Markdown: link
				"text.html.markdown meta.link.reference.def constant.other", // Markdown: link definition
				"text.asciidoc markup.reference string", // AsciiDoc: reference <<...>>
				"text.asciidoc markup.other.url string", // AsciiDoc: link
				"meta.link.email.lt-gt.markdown markup.underline.link", // Markup: email
				"markup.link.email", // AsciiDoc: email link
			],
			"settings": {
				"foreground": "#6dbaf2",
				"fontStyle": ""
			}
		},
		//
		// YAML specific
		//
		{
			"name": "anchor",
			"scope": [
				"entity.name.type.anchor.yaml", // YAML: anchor name
				"variable.other.alias.yaml", // YAML: use of anchor
			],
			"settings": {
				"foreground": "#6dbaf2",
				"fontStyle": ""
			}
		},
		//
		// Markup specific
		//
		{
			"name": "headings",
			"scope": [
				"markup.heading", // Markdown, AsciiDoc: headings
			],
			"settings": {
				"foreground": "#69edab",
				"fontStyle": ""
			}
		},
		{
			"name": "inline code",
			"scope": [
				"markup.inline.raw.string", // Markdown: inline raw string
				"text.asciidoc markup.raw", // AsciiDoc: raw string
			],
			"settings": {
				"foreground": "#e6b583",
				"fontStyle": ""
			}
		},
		{
			"name": "inline code in comments",
			"scope": [
				"comment markup.inline.raw.string",
			],
			"settings": {
				"foreground": "#e6b583b9",
				"fontStyle": ""
			}
		},
		{
			"name": "text",
			"scope": [
				"text.asciidoc markup.macro string", // AsciiDoc: text in macros
			],
			"settings": {
				"foreground": "#acafbf",
				"fontStyle": ""
			}
		},
		{
			"name": "block quotes",
			"scope": [
				"markup.quote", // Markdown:
				"markup.italic.quotes" // AsciiDoc:
			],
			"settings": {
				"foreground": "#acafbf",
				"fontStyle": "italic"
			}
		},
		{
			"name": "bold",
			"scope": [
				"markup.bold"
			],
			"settings": {
				"foreground": "#d1d5eb",
				"fontStyle": "bold"
			}
		},
		{
			"name": "italic",
			"scope": [
				"markup.italic"
			],
			"settings": {
				"foreground": "#d1d5eb",
				"fontStyle": "italic"
			}
		},
		{
			"scope": [
				"markup.list punctuation",
				"markup.quote punctuation",
				"markup.fenced_code.block punctuation.definition",
				"markup.fenced_code.block fenced_code.block.language",
				"meta.separator.markdown",
				"markup.list.bullet",
			],
			"settings": {
				"foreground": "#d1d5eb",
			}
		},
		{
			"name": "callout",
			"scope": [
				"callout.source.code.asciidoc", // AsciiDoc: callouts like # <1>
				"callout.source.code.asciidoc constant.other",
				"callout.source.code.asciidoc constant.numeric",
			],
			"settings": {
				"foreground": "#737580",
				"fontStyle": ""
			}
		},
		//
		// TeX specific
		//
		{
			"name": "function like",
			"scope": [
				"text.tex support.function",
				"text.tex storage.type.function",
				"text.tex constant.other", // commands in math blocks like \frac
				"text.tex constant",
			],
			"settings": {
				"foreground": "#f28585",
				"fontStyle": ""
			}
		},
		{
			"name": "function like",
			"scope": [
				"text.tex support.function.be",
				"text.tex support.function.section",
			],
			"settings": {
				"foreground": "#6dbaf2",
				"fontStyle": ""
			}
		},
		{
			"name": "regular text inside math blocks",
			"scope": [
				"text.tex support.class.math",
			],
			"settings": {
				"foreground": "#e6b583",
				"fontStyle": "",
			}
		},
		{
			"scope": [
				"text.tex meta.function variable.parameter", // TeX: environment names
			],
			"settings": {
				"foreground": "#d1d5eb",
				"fontStyle": ""
			}
		},
		{
			"scope": [
				"text.tex meta.preamble support.class", // TeX: environment names
			],
			"settings": {
				"foreground": "#acafbf",
				"fontStyle": ""
			}
		},
		{
			"scope": [
				"text.tex entity.name.section", // TeX: environment names
			],
			"settings": {
				"foreground": "#e6b583",
				"fontStyle": ""
			}
		},
	],
	"semanticHighlighting": true,
	// def tokens: https://github.com/Microsoft/vscode/blob/main/src/vs/platform/theme/common/tokenClassificationRegistry.ts#L364
	// Rust: https://rust-analyzer.github.io/manual.html#semantic-syntax-highlighting
	// C#: https://github.com/OmniSharp/omnisharp-vscode/blob/master/src/features/semanticTokensProvider.ts	
	// Python: https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance
	// Java: https://github.com/eclipse/eclipse.jdt.ls/blob/master/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/semantictokens/TokenType.java
	// JavaScript: https://github.com/microsoft/vscode/blob/main/extensions/html-language-features/server/src/modes/javascriptSemanticTokens.ts
	// 
	"semanticTokenColors": {
		//"generic": "#acafbf",
		"parameter": "#d1d5eb", // Parameters inside the functions are only detected by semantic highlighting, color them here
		"selfParameter:python": "#f28585", // Python: above override self parameter too, need to override it again
		"clsParameter:python": "#f28585", // Python: same as with self
		"builtinConstant:python": { // Python: True/False/None 
			"italic": false
		},
		"*.static": {
			"italic": true
		},
		"*.static.constant": {
			"italic": false
		},
		"*.static.readonly": {
			"italic": false
		},
		"*.mutable": {
			"underline": true
		},
		"member:fsharp": "#d1d5eb", // F#: members which are otherwise mapped to entity.name.function
		// Kotlin: variables/parameters are either mutable or readonly, 
		// latter is specified by modifier
		// also definitions are as: 
		//     Property -> definition, a in val a
		//     Variable -> variable use, a in a.member
		//     Parameter -> parameter in function signature/head
		// so effectively there is no consistency between variable and it's color, so color them all gray
		"property:kotlin": {
			"underline": true,
			"foreground": "#acafbf"
		},
		"property.readonly:kotlin": {
			"underline": false,
			"foreground": "#acafbf"
		},
		"parameter:kotlin": {
			"underline": true,
			"foreground": "#acafbf"
		},
		"parameter.readonly:kotlin": {
			"underline": false,
			"foreground": "#acafbf"
		},
		"variable:kotlin": {
			"underline": true,
			"foreground": "#acafbf"
		},
		"variable.readonly:kotlin": {
			"underline": false,
			"foreground": "#acafbf"
		},
		"variable.static:rust": { // Rust: non-member (global, local) statics, 
			"foreground": "#d1d5eb"
		},
		// interfaces
		// to override:
		// * typescripts weird mapping of interface to class,
		// * rust mapping of "interface.defaultLibrary" traits to 'support.class'
		"interface": "#eddd9a",
		// annotations
		"*.annotation:dart": "#eddd9a", // Dart: annotations, they delegate to class, property, thus need to override here
		"annotation:dart": "#eddd9a", // Dart: annotations @
		"keyword.void:dart": "#69edab", // Dart: void type
		"source.interpolation:dart": "#df9355", // Dart: interpolation input
		"type:kotlin": "#eddd9a", // Kotlin: annotations
		//
		"decorator": "#eddd9a", // Rust: builtin attributes like feature = "..."
		"class.decorator": "#eddd9a", // Python: decorators that are classes
		"function.decorator": "#eddd9a", // Python: decorators that are functions
		"attributeBracket:rust": "#acafbf", //  [ in #[...]
		// toml
		"tomlTableKey": "#d1d5eb", // toml inline table key 
		"tomlArrayKey": "#d1d5eb", // toml inline array key
		// other
		"class.constructor:java": "#69edab", // Java: constructor
		"class": {
			"italic": false
		}, // Java: 'final' classes are detected as readonly, don't make them italic
		"enum": {
			"italic": false,
		}, // Java: same as with classes above
		"enumMember": {
			"italic": false
		}, // Java: same as with classes above
		"formatSpecifier": "#df9355",
		"escapeSequence": "#df9355",
		// // Rust documentation, dim all the colors slightly
		"*.injected": "#acafbfb9",
		"generic.injected:rust": "#acafbfb9",
		"namespace.injected:rust": "#acafbfb9",
		// types
		"struct.injected:rust": "#69edabb9",
		"enum.injected:rust": "#69edabb9",
		"enumMember.injected:rust": "#d1d5ebb9",
		"builtinType.injected:rust": "#69edabb9",
		"typeAlias.injected:rust": "#69edabb9",
		"union.injected:rust": "#69edabb9",
		"typeParameter.injected:rust": "#69edabb9",
		// traits
		"trait.injected:rust": "#eddd9ab9",
		"interface.injected:rust": "#eddd9ab9",
		// keywords
		"keyword.injected:rust": "#f28585a0",
		"selfKeyword.injected:rust": "#f28585a0",
		"selfTypeKeyword.injected:rust": "#f28585a0",
		// function like
		"function.injected:rust": "#6dbaf2b9",
		"macro.injected:rust": "#6dbaf2b9",
		"method.injected:rust": "#6dbaf2b9",
		// operators
		"operator.injected:rust": "#acafbfb9",
		"arithmetic.injected:rust": "#acafbfb9",
		"bitwise.injected:rust": "#acafbfb9",
		"comparison.injected:rust": "#acafbfb9",
		"logical.injected:rust": "#acafbfb9",
		// punctuation
		"punctuation.injected:rust": "#acafbfb9",
		"attributeBracket.injected:rust": "#acafbfb9",
		"angle.injected:rust": "#acafbfb9",
		"brace.injected:rust": "#acafbfb9",
		"bracket.injected:rust": "#acafbfb9",
		"parenthesis.injected:rust": "#acafbfb9",
		"colon.injected:rust": "#acafbfb9",
		"comma.injected:rust": "#acafbfb9",
		"dot.injected:rust": "#acafbfb9",
		"semi.injected:rust": "#acafbfb9",
		"macroBang.injected:rust": "#acafbfb9",
		// variables
		"variable.injected:rust": "#acafbfb9",
		"property.injected:rust": "#d1d5ebb9",
		"parameter.injected:rust": "#d1d5ebb9",
		"variable.constant.injected:rust": "#d1d5ebb9",
		"variable.static.injected:rust": "#d1d5ebb9",
		"constParameter.injected:rust": "#d1d5ebb9",
		// literals
		"string.injected:rust": "#e6b583b9",
		"character.injected:rust": "#e6b583b9",
		"escapeSequence.injected:rust": "#df9355b9",
		"formatSpecifier.injected:rust": "#e6b583b9",
		"number.injected:rust": "#e6b583b9",
		"boolean.injected:rust": "#f28585a0",
		// attributes
		"builtinAttribute.injected:rust": "#eddd9ab9",
		"attribute.injected:rust": "#eddd9ab9",
		"decorator.injected:rust": "#eddd9ab9",
		"derive.injected:rust": "#eddd9ab9",
		"deriveHelper.injected:rust": "#eddd9ab9",
		"generic.attribute.injected:rust": "#eddd9ab9",
		"namespace.attribute.injected:rust": "#eddd9ab9", // derive in doc code blocks
		// labels
		"label.injected:rust": "#df9355b9",
		"lifetime.injected:rust": "#df9355b9",
		// comment
		"comment.injected:rust": "#737580b9",
		// Other documentation
		"parameter.documentation": "#d1d5ebb9",
		"variable.documentation": "#acafbfb9",
		"class.documentation": "#69edabb9",
		"struct.documentation": "#69edabb9",
		"enum.documentation": "#69edabb9",
		"enumMember.documentation": "#d1d5ebb9",
		"interface.documentation": "#eddd9ab9",
		"namespace.documentation": "#acafbfb9",
		"keyword.documentation": "#f28585a0",
		"function.documentation": "#6dbaf2b9",
		"method.documentation": "#6dbaf2b9",
		//"class:kotlin": "#f28585",
	}
}